<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:flow="http://www.springframework.org/schema/webflow-config"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc 
                           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx.xsd     
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd">
    
<!--  
    Izbrisano jer se ne igra lepo sa Hibernateom stvara "Error creating bean with name" gresku
  <context:component-scan base-package="com.mycompany.*" />
-->
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="configLocation" >
            <!--Dodavanje path-a na kome se nalaze podešavanja za Hibernate -->
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <!-- Dodavanje path-a paketa u kome se nalaze entity fajlovi na osnovu kojih
        će Hibernate kreirati bazu i upisivati u nju-->
        <property name="packagesToScan">
            <list>
                <value>com.mycompany.model</value>
            </list>
        </property>
    </bean>

    <!--Transakcija se dešava između baze i programa korišćenjem Transaction Managera koji definišemo ovde
    On koristi sesiju koju smo definisali iznad    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
     
    <bean id="transactionManager"  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
 
    <bean id="proizvodDao" class="com.mycompany.dao.impl.ProizvodDaoImpl">
    </bean>
    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <context:component-scan base-package="com.mycompany" />

    <tx:annotation-driven />

    <mvc:default-servlet-handler />
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
        <property name="prefix" value="/WEB-INF/jsp/" /> 
        <property name="suffix" value=".jsp" /> 
    </bean>
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <mvc:resources mapping="/img/**" location="/WEB-INF/img/" />
    <mvc:annotation-driven />
   
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>/WEB-INF/lang/proizvod</value>
                <value>/WEB-INF/lang/index</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    
    <bean id="logAspect" class="com.mycompany.aspect.InterceptorLog" />
    
    <bean id="logPointcutAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice" ref="logAspect" />
        <property name="mappedName">
            <value>*</value>
        </property>
    </bean>
    
    <bean id="testServiceProxy"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames" value="proizvodDao" />
        <property name="interceptorNames">
            <list>
                <value>logPointcutAdvisor</value>
            </list>
        </property>
    </bean>
</beans>
